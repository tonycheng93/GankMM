apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.sky.gankmm"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

/*
 Dependency versions are defined in the top level build.gradle file. This helps keeping track of
 all versions in a single place. This improves readability and helps managing project complexity.
 */
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // App's dependencies
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"

    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroid2Version"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.adapterRxjavaVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.converterGsonVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.loggingInterceptorVersion"
    compile "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    compile("com.squareup.sqlbrite:sqlbrite:$rootProject.sqlbriteVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
    provided 'org.glassfish:javax.annotation:10.0-b28' //Required by Dagger2
    apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compile("me.drakeet.multitype:multitype:$rootProject.multitypeVersion") {
        exclude group: 'com.android.support'
    }
    compile "com.youth.banner:banner:$rootProject.ext.bannerVersion"
    //auto-value
    provided "com.google.auto.value:auto-value:$rootProject.ext.autoValueVersion"
    apt "com.google.auto.value:auto-value:$rootProject.ext.autoValueVersion"
    apt "com.ryanharter.auto.value:auto-value-gson:$rootProject.ext.autoValueGsonVersion"
    provided "com.ryanharter.auto.value:auto-value-gson:$rootProject.ext.autoValueGsonVersion"
    apt "com.ryanharter.auto.value:auto-value-parcel:$rootProject.ext.autoValueParcelVersion"
    compile "com.google.code.gson:gson:$rootProject.ext.gsonVersion"
    //test
    testCompile 'junit:junit:4.12'
}
